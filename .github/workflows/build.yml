name: Tag and upload

on:
  workflow_run:
    workflows: ["Compile and test"]
    types: [completed]
    branches:
      - "master"
  workflow_dispatch:

jobs:
  build:
    name: Build package
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          java-package: jdk
          distribution: 'adopt'

      - name: Get version from pom.xml
        id: get_version
        run: |
          VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
          __git_sha=${{ github.sha }}
          echo "GIT_SHORTSHA=${__git_sha:0:7}" >> $GITHUB_ENV

      - name: Check for non-snapshot version
        id: check_snapshot
        run: |
          if [[ "${{ env.VERSION }}" =~ SNAPSHOT ]]; then
            echo "This is a snapshot version. Exiting."
            exit 1
          fi

      - name: Create Git tag for version
        id: git_tag
        run: |
          TAG_NAME="${{ env.VERSION }}"
          git config user.name --global "GitHub Actions"
          git config user.email --global "nossr50@gmail.com"
          if git tag -l | grep -q "$TAG_NAME"; then
            echo "Git tag '$TAG_NAME' already exists. Skipping tag creation."
          else
            git tag "$TAG_NAME" -m "v$TAG_NAME"
            git push --tags
            echo "New tag '$TAG_NAME' created and pushed."
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Cache Maven packages
        id: maven_cache
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build with Maven
        id: maven_build
        run: mvn -DskipTests clean package # assume tests have already passed

      - name: Upload .jar artifact
        id: artifact_upload
        uses: actions/upload-artifact@v4
        with:
          name: mcMMO_v${{ env.VERSION }}.git-${{ env.GIT_SHORTSHA }}
          path: ${{ github.workspace }}/target/mcMMO.jar
